module Bem2dQuadKernels

# Coincident 3-node quadratic kernels
# Kernels for coincident integrals f, shape_function_idx, node_idx
export quadkernel_coincident
function quadkernel_coincident(a, ν)
    # TODO: Should I swap order: nodeidx, f, shapefunction Probably
    f = zeros(7, 3, 3)

    f[1, 1, 1] = -5 / 144 * a * log(25 / 9 * a^2) / (π - π * ν) - 17 / 288 * a * log(1 / 9 * a^2) / (π - π * ν) + 1 / 12 * a / (π - π * ν)
    f[1, 2, 1] = -25 / 288 * a * log(25 / 9 * a^2) / (π - π * ν) + 7 / 288 * a * log(1 / 9 * a^2) / (π - π * ν) + 1 / 12 * a / (π - π * ν)
    f[1, 3, 1] = -25 / 288 * a * log(25 / 9 * a^2) / (π - π * ν) - 1 / 144 * a * log(1 / 9 * a^2) / (π - π * ν) - 1 / 6 * a / (π - π * ν)
    f[1, 1, 2] = -3 / 16 * a * log(a) / (π - π * ν) - 1 / 8 * a / (π - π * ν)
    f[1, 2, 2] = -1 / 8 * a * log(a) / (π - π * ν) + 1 / 4 * a / (π - π * ν)
    f[1, 3, 2] = -3 / 16 * a * log(a) / (π - π * ν) - 1 / 8 * a / (π - π * ν)
    f[1, 1, 3] = -25 / 288 * a * log(25 / 9 * a^2) / (π - π * ν) - 1 / 144 * a * log(1 / 9 * a^2) / (π - π * ν) - 1 / 6 * a / (π - π * ν)
    f[1, 2, 3] = -25 / 288 * a * log(25 / 9 * a^2) / (π - π * ν) + 7 / 288 * a * log(1 / 9 * a^2) / (π - π * ν) + 1 / 12 * a / (π - π * ν)
    f[1, 3, 3] = -5 / 144 * a * log(25 / 9 * a^2) / (π - π * ν) - 17 / 288 * a * log(1 / 9 * a^2) / (π - π * ν) + 1 / 12 * a / (π - π * ν)

    f[2, 1, 1] = 1 / 4 / (ν - 1)
    f[2, 2, 1] = 0
    f[2, 3, 1] = 0
    f[2, 1, 2] = 0
    f[2, 2, 2] = 1 / 4 / (ν - 1)
    f[2, 3, 2] = 0
    f[2, 1, 3] = 0
    f[2, 2, 3] = 0
    f[2, 3, 3] = 1 / 4 / (ν - 1)

    f[3, 1, 1] = 1 / 8 * log(25 / 9 * a^2) / (π - π * ν) - 1 / 8 * log(1 / 9 * a^2) / (π - π * ν) - 3 / 4 / (π - π * ν)
    f[3, 2, 1] = 3 / 4 / (π - π * ν)
    f[3, 3, 1] = 0
    f[3, 1, 2] = -3 / 8 / (π - π * ν)
    f[3, 2, 2] = 0
    f[3, 3, 2] = 3 / 8 / (π - π * ν)
    f[3, 1, 3] = 0
    f[3, 2, 3] = -3 / 4 / (π - π * ν)
    f[3, 3, 3] = -1 / 8 * log(25 / 9 * a^2) / (π - π * ν) + 1 / 8 * log(1 / 9 * a^2) / (π - π * ν) + 3 / 4 / (π - π * ν)

    f[4, 1, 1] = -9 / 16 / (a * ν - a)
    f[4, 2, 1] = 3 / 4 / (a * ν - a)
    f[4, 3, 1] = -3 / 16 / (a * ν - a)
    f[4, 1, 2] = -3 / 16 / (a * ν - a)
    f[4, 2, 2] = 0
    f[4, 3, 2] = 3 / 16 / (a * ν - a)
    f[4, 1, 3] = 3 / 16 / (a * ν - a)
    f[4, 2, 3] = -3 / 4 / (a * ν - a)
    f[4, 3, 3] = 9 / 16 / (a * ν - a)

    f[5, 1, 1] = 9 / 32 * log(25 / 9 * a^2) / (π * a * ν - π * a) - 9 / 32 * log(1 / 9 * a^2) / (π * a * ν - π * a) + 27 / 80 / (π * a * ν - π * a)
    f[5, 2, 1] = -3 / 8 * log(25 / 9 * a^2) / (π * a * ν - π * a) + 3 / 8 * log(1 / 9 * a^2) / (π * a * ν - π * a) + 9 / 8 / (π * a * ν - π * a)
    f[5, 3, 1] = 3 / 32 * log(25 / 9 * a^2) / (π * a * ν - π * a) - 3 / 32 * log(1 / 9 * a^2) / (π * a * ν - π * a) - 9 / 16 / (π * a * ν - π * a)
    f[5, 1, 2] = -9 / 16 / (π * a * ν - π * a)
    f[5, 2, 2] = 13 / 8 / (π * a * ν - π * a)
    f[5, 3, 2] = -9 / 16 / (π * a * ν - π * a)
    f[5, 1, 3] = 3 / 32 * log(25 / 9 * a^2) / (π * a * ν - π * a) - 3 / 32 * log(1 / 9 * a^2) / (π * a * ν - π * a) - 9 / 16 / (π * a * ν - π * a)
    f[5, 2, 3] = -3 / 8 * log(25 / 9 * a^2) / (π * a * ν - π * a) + 3 / 8 * log(1 / 9 * a^2) / (π * a * ν - π * a) + 9 / 8 / (π * a * ν - π * a)
    f[5, 3, 3] = 9 / 32 * log(25 / 9 * a^2) / (π * a * ν - π * a) - 9 / 32 * log(1 / 9 * a^2) / (π * a * ν - π * a) + 27 / 80 / (π * a * ν - π * a)

    f[6, 1, 1] = 9 / 32 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 9 / 32 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 621 / 100 / (π * a^2 * ν - π * a^2)
    f[6, 2, 1] = -9 / 16 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 9 / 16 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 27 / 5 / (π * a^2 * ν - π * a^2)
    f[6, 3, 1] = 9 / 32 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 9 / 32 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 27 / 20 / (π * a^2 * ν - π * a^2)
    f[6, 1, 2] = 3 / 4 / (π * a^2 * ν - π * a^2)
    f[6, 2, 2] = 0
    f[6, 3, 2] = -3 / 4 / (π * a^2 * ν - π * a^2)
    f[6, 1, 3] = -9 / 32 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 9 / 32 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 27 / 20 / (π * a^2 * ν - π * a^2)
    f[6, 2, 3] = 9 / 16 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 9 / 16 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 27 / 5 / (π * a^2 * ν - π * a^2)
    f[6, 3, 3] = -9 / 32 * log(25 / 9 * a^2) / (π * a^2 * ν - π * a^2) + 9 / 32 * log(1 / 9 * a^2) / (π * a^2 * ν - π * a^2) - 621 / 100 / (π * a^2 * ν - π * a^2)

    f[7, 1, 1] = -9 / 16 / (a^2 * ν - a^2)
    f[7, 2, 1] = 9 / 8 / (a^2 * ν - a^2)
    f[7, 3, 1] = -9 / 16 / (a^2 * ν - a^2)
    f[7, 1, 2] = -9 / 16 / (a^2 * ν - a^2)
    f[7, 2, 2] = 9 / 8 / (a^2 * ν - a^2)
    f[7, 3, 2] = -9 / 16 / (a^2 * ν - a^2)
    f[7, 1, 3] = -9 / 16 / (a^2 * ν - a^2)
    f[7, 2, 3] = 9 / 8 / (a^2 * ν - a^2)
    f[7, 3, 3] = -9 / 16 / (a^2 * ν - a^2)
    return f
end


# Farfield 3-node quadratic kernels
# f has dimensions [nobs, f=7, shapefunctions=3]
# Classic form of:
# term1[i] = np.arctan((a - x) / y)
# term2[i] = np.arctan((a + x) / y)
# has been replaced these with the equaivalent terms below to
# avoid singularities at y = 0.  Singularities at x = +/- a still exist
export quadkernel_farfield
function quadkernel_farfield(x, y, a, ν)
    term1 = π / 2 * @.sign(y / (a - x)) - @.atan(y / (a - x)) # term1 transformation: np.arctan((a - x) / y)
    term2 = π / 2 * @.sign(y / (a + x)) - @.atan(y / (a + x)) # term2 transformation: np.arctan((a + x) / y)

    f = zeros(length(x), 7, 3)
    for i in 1:length(x)
        f[i, 1, 1] = -1 / 64 * ( 6 * y[i]^3 * (term2[i] + term1[i]) - 6 * a^3 * log(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2) - 8 * a^3 - 12 * a^2 * x[i] + 12 * a * x[i]^2 - 12 * a * y[i]^2 + 6 * ( (2 * a * x[i] - 3 * x[i]^2) * term2[i] + (2 * a * x[i] - 3 * x[i]^2) * term1[i] ) * y[i] + 3 * (a * x[i]^2 - x[i]^3 - (a - 3 * x[i]) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 3 * (a * x[i]^2 - x[i]^3 - (a - 3 * x[i]) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2)) ) / (π * a^2 * ν - π * a^2)
        f[i, 1, 2] = 1 / 32 * (6 * y[i]^3 * (term2[i] + term1[i]) + a^3 * log(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2) + a^3 * log(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2) - 8 * a^3 + 12 * a * x[i]^2 - 12 * a * y[i]^2 + 2 * ((4 * a^2 - 9 * x[i]^2) * term2[i] + (4 * a^2 - 9 * x[i]^2) * term1[i]) * y[i] + (4 * a^2 * x[i] - 3 * x[i]^3 + 9 * x[i] * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - (4 * a^2 * x[i] - 3 * x[i]^3 + 9 * x[i] * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^2 * ν - π * a^2)
        f[i, 1, 3] = -1 / 64 * (6 * y[i]^3 * (term2[i] + term1[i]) - 6 * a^3 * log(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2) - 8 * a^3 + 12 * a^2 * x[i] + 12 * a * x[i]^2 - 12 * a * y[i]^2 - 6 * ((2 * a * x[i] + 3 * x[i]^2) * term2[i] + (2 * a * x[i] + 3 * x[i]^2) * term1[i]) * y[i] - 3 * (a * x[i]^2 + x[i]^3 - (a + 3 * x[i]) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + 3 * (a * x[i]^2 + x[i]^3 - (a + 3 * x[i]) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^2 * ν - π * a^2)

        f[i, 2, 1] = -3 / 32 * (3 * y[i]^2 * (term2[i] + term1[i]) - (a - 3 * x[i]) * y[i] * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + (a - 3 * x[i]) * y[i] * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2)) - 6 * a * y[i] + (2 * a * x[i] - 3 * x[i]^2) * term2[i] + (2 * a * x[i] - 3 * x[i]^2) * term1[i]) / (π * a^2 * ν - π * a^2)
        f[i, 2, 2] = 1 / 16 * (9 * y[i]^2 * (term2[i] + term1[i]) + 9 * x[i] * y[i] * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 9 * x[i] * y[i] * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2)) - 18 * a * y[i] + (4 * a^2 - 9 * x[i]^2) * term2[i] + (4 * a^2 - 9 * x[i]^2) * term1[i]) / (π * a^2 * ν - π * a^2)
        f[i, 2, 3] = -3 / 32 * (3 * y[i]^2 * (term2[i] + term1[i]) + (a + 3 * x[i]) * y[i] * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - (a + 3 * x[i]) * y[i] * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2)) - 6 * a * y[i] - (2 * a * x[i] + 3 * x[i]^2) * term2[i] - (2 * a * x[i] + 3 * x[i]^2) * term1[i]) / (π * a^2 * ν - π * a^2)

        f[i, 3, 1] = 3 / 64 * (8 * a^2 - 12 * a * x[i] - 4 * ((a - 3 * x[i]) * term2[i] + (a - 3 * x[i]) * term1[i]) * y[i] - (2 * a * x[i] - 3 * x[i]^2 + 3 * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + (2 * a * x[i] - 3 * x[i]^2 + 3 * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^2 * ν - π * a^2)
        f[i, 3, 2] = 1 / 32 * (36 * a * x[i] - 36 * (x[i] * term2[i] + x[i] * term1[i]) * y[i] + (4 * a^2 - 9 * x[i]^2 + 9 * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - (4 * a^2 - 9 * x[i]^2 + 9 * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^2 * ν - π * a^2)
        f[i, 3, 3] = -3 / 64 * (8 * a^2 + 12 * a * x[i] - 4 * ((a + 3 * x[i]) * term2[i] + (a + 3 * x[i]) * term1[i]) * y[i] - (2 * a * x[i] + 3 * x[i]^2 - 3 * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + (2 * a * x[i] + 3 * x[i]^2 - 3 * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^2 * ν - π * a^2)

        f[i, 4, 1] = 3 / 32 * (4 * a^2 * y[i]^3 - 2 * ((a - 3 * x[i]) * term2[i] + (a - 3 * x[i]) * term1[i]) * y[i]^4 - 4 * ((a^3 - 3 * a^2 * x[i] + a * x[i]^2 - 3 * x[i]^3) * term2[i] + (a^3 - 3 * a^2 * x[i] + a * x[i]^2 - 3 * x[i]^3) * term1[i]) * y[i]^2 + 4 * (a^4 - 3 * a^3 * x[i] + a^2 * x[i]^2) * y[i] - 2 * (a^5 - 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 + 6 * a^2 * x[i]^3 + a * x[i]^4 - 3 * x[i]^5) * term2[i] - 2 * (a^5 - 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 + 6 * a^2 * x[i]^3 + a * x[i]^4 - 3 * x[i]^5) * term1[i] - 3 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + 3 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)
        f[i, 4, 2] = 1 / 16 * (20 * a^3 * x[i] * y[i] - 18 * (x[i] * term2[i] + x[i] * term1[i]) * y[i]^4 - 36 * ((a^2 * x[i] + x[i]^3) * term2[i] + (a^2 * x[i] + x[i]^3) * term1[i]) * y[i]^2 - 18 * (a^4 * x[i] - 2 * a^2 * x[i]^3 + x[i]^5) * term2[i] - 18 * (a^4 * x[i] - 2 * a^2 * x[i]^3 + x[i]^5) * term1[i] + 9 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 9 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)
        f[i, 4, 3] = -3 / 32 * (4 * a^2 * y[i]^3 - 2 * ((a + 3 * x[i]) * term2[i] + (a + 3 * x[i]) * term1[i]) * y[i]^4 - 4 * ((a^3 + 3 * a^2 * x[i] + a * x[i]^2 + 3 * x[i]^3) * term2[i] + (a^3 + 3 * a^2 * x[i] + a * x[i]^2 + 3 * x[i]^3) * term1[i]) * y[i]^2 + 4 * (a^4 + 3 * a^3 * x[i] + a^2 * x[i]^2) * y[i] - 2 * (a^5 + 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 - 6 * a^2 * x[i]^3 + a * x[i]^4 + 3 * x[i]^5) * term2[i] - 2 * (a^5 + 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 - 6 * a^2 * x[i]^3 + a * x[i]^4 + 3 * x[i]^5) * term1[i] + 3 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 3 * (y[i]^5 + 2 * (a^2 + x[i]^2) * y[i]^3 + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * y[i]) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)

        f[i, 5, 1] = 3 / 32 * (6 * y[i]^5 * (term2[i] + term1[i]) - 6 * a^5 - 4 * a^4 * x[i] + 18 * a^3 * x[i]^2 + 4 * a^2 * x[i]^3 - 12 * a * x[i]^4 - 12 * a * y[i]^4 + 12 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^3 - 2 * (9 * a^3 - 2 * a^2 * x[i] + 12 * a * x[i]^2) * y[i]^2 + 6 * ((a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term2[i] + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term1[i]) * y[i] - (a^5 - 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 + 6 * a^2 * x[i]^3 + a * x[i]^4 - 3 * x[i]^5 + (a - 3 * x[i]) * y[i]^4 + 2 * (a^3 - 3 * a^2 * x[i] + a * x[i]^2 - 3 * x[i]^3) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + (a^5 - 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 + 6 * a^2 * x[i]^3 + a * x[i]^4 - 3 * x[i]^5 + (a - 3 * x[i]) * y[i]^4 + 2 * (a^3 - 3 * a^2 * x[i] + a * x[i]^2 - 3 * x[i]^3) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)
        f[i, 5, 2] = -1 / 16 * (18 * y[i]^5 * (term2[i] + term1[i]) - 26 * a^5 + 62 * a^3 * x[i]^2 - 36 * a * x[i]^4 - 36 * a * y[i]^4 + 36 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^3 - 2 * (31 * a^3 + 36 * a * x[i]^2) * y[i]^2 + 18 * ((a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term2[i] + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term1[i]) * y[i] + 9 * (a^4 * x[i] - 2 * a^2 * x[i]^3 + x[i]^5 + x[i] * y[i]^4 + 2 * (a^2 * x[i] + x[i]^3) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 9 * (a^4 * x[i] - 2 * a^2 * x[i]^3 + x[i]^5 + x[i] * y[i]^4 + 2 * (a^2 * x[i] + x[i]^3) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)
        f[i, 5, 3] = 3 / 32 * (6 * y[i]^5 * (term2[i] + term1[i]) - 6 * a^5 + 4 * a^4 * x[i] + 18 * a^3 * x[i]^2 - 4 * a^2 * x[i]^3 - 12 * a * x[i]^4 - 12 * a * y[i]^4 + 12 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^3 - 2 * (9 * a^3 + 2 * a^2 * x[i] + 12 * a * x[i]^2) * y[i]^2 + 6 * ((a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term2[i] + (a^4 - 2 * a^2 * x[i]^2 + x[i]^4) * term1[i]) * y[i] + (a^5 + 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 - 6 * a^2 * x[i]^3 + a * x[i]^4 + 3 * x[i]^5 + (a + 3 * x[i]) * y[i]^4 + 2 * (a^3 + 3 * a^2 * x[i] + a * x[i]^2 + 3 * x[i]^3) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - (a^5 + 3 * a^4 * x[i] - 2 * a^3 * x[i]^2 - 6 * a^2 * x[i]^3 + a * x[i]^4 + 3 * x[i]^5 + (a + 3 * x[i]) * y[i]^4 + 2 * (a^3 + 3 * a^2 * x[i] + a * x[i]^2 + 3 * x[i]^3) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^6 * ν - π * a^6 + (π * a^2 * ν - π * a^2) * x[i]^4 + (π * a^2 * ν - π * a^2) * y[i]^4 - 2 * (π * a^4 * ν - π * a^4) * x[i]^2 + 2 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^2)

        f[i, 6, 1] = 3 / 32 * (8 * a^8 - 24 * a^7 * x[i] - 16 * a^6 * x[i]^2 + 60 * a^5 * x[i]^3 + 8 * a^4 * x[i]^4 - 48 * a^3 * x[i]^5 + 12 * a * x[i]^7 + 12 * a * x[i] * y[i]^6 + 4 * (2 * a^4 + 12 * a^3 * x[i] + 9 * a * x[i]^3) * y[i]^4 + 4 * (4 * a^6 + 3 * a^5 * x[i] - 12 * a^4 * x[i]^2 + 9 * a * x[i]^5) * y[i]^2 - 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)
        f[i, 6, 2] = 1 / 16 * (56 * a^7 * x[i] - 148 * a^5 * x[i]^3 + 128 * a^3 * x[i]^5 - 36 * a * x[i]^7 - 36 * a * x[i] * y[i]^6 - 12 * (8 * a^3 * x[i] + 9 * a * x[i]^3) * y[i]^4 - 4 * (a^5 * x[i] - 8 * a^3 * x[i]^3 + 27 * a * x[i]^5) * y[i]^2 + 9 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 9 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)
        f[i, 6, 3] = -3 / 32 * (8 * a^8 + 24 * a^7 * x[i] - 16 * a^6 * x[i]^2 - 60 * a^5 * x[i]^3 + 8 * a^4 * x[i]^4 + 48 * a^3 * x[i]^5 - 12 * a * x[i]^7 - 12 * a * x[i] * y[i]^6 + 4 * (2 * a^4 - 12 * a^3 * x[i] - 9 * a * x[i]^3) * y[i]^4 + 4 * (4 * a^6 - 3 * a^5 * x[i] - 12 * a^4 * x[i]^2 - 9 * a * x[i]^5) * y[i]^2 + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 + 2 * a * x[i] + x[i]^2 + y[i]^2)) - 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8 + y[i]^8 + 4 * (a^2 + x[i]^2) * y[i]^6 + 2 * (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * y[i]^4 + 4 * (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * y[i]^2) * log(abs(a^2 - 2 * a * x[i] + x[i]^2 + y[i]^2))) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)

        f[i, 7, 1] = -3 / 16 * (3 * y[i]^8 * (term2[i] + term1[i]) - 6 * a * y[i]^7 + 12 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^6 - 6 * (4 * a^3 + 3 * a * x[i]^2) * y[i]^5 + 6 * ((3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term2[i] + (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term1[i]) * y[i]^4 - 2 * (15 * a^5 - 8 * a^4 * x[i] + 9 * a * x[i]^4) * y[i]^3 + 12 * ((a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term2[i] + (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term1[i]) * y[i]^2 - 2 * (6 * a^7 - 8 * a^6 * x[i] + 3 * a^5 * x[i]^2 + 8 * a^4 * x[i]^3 - 12 * a^3 * x[i]^4 + 3 * a * x[i]^6) * y[i] + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term2[i] + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term1[i]) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)
        f[i, 7, 2] = 1 / 8 * (9 * y[i]^8 * (term2[i] + term1[i]) - 18 * a * y[i]^7 + 36 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^6 - 2 * (32 * a^3 + 27 * a * x[i]^2) * y[i]^5 + 18 * ((3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term2[i] + (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term1[i]) * y[i]^4 - 2 * (37 * a^5 + 8 * a^3 * x[i]^2 + 27 * a * x[i]^4) * y[i]^3 + 36 * ((a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term2[i] + (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term1[i]) * y[i]^2 - 2 * (14 * a^7 + a^5 * x[i]^2 - 24 * a^3 * x[i]^4 + 9 * a * x[i]^6) * y[i] + 9 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term2[i] + 9 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term1[i]) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)
        f[i, 7, 3] = -3 / 16 * (3 * y[i]^8 * (term2[i] + term1[i]) - 6 * a * y[i]^7 + 12 * ((a^2 + x[i]^2) * term2[i] + (a^2 + x[i]^2) * term1[i]) * y[i]^6 - 6 * (4 * a^3 + 3 * a * x[i]^2) * y[i]^5 + 6 * ((3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term2[i] + (3 * a^4 + 2 * a^2 * x[i]^2 + 3 * x[i]^4) * term1[i]) * y[i]^4 - 2 * (15 * a^5 + 8 * a^4 * x[i] + 9 * a * x[i]^4) * y[i]^3 + 12 * ((a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term2[i] + (a^6 - a^4 * x[i]^2 - a^2 * x[i]^4 + x[i]^6) * term1[i]) * y[i]^2 - 2 * (6 * a^7 + 8 * a^6 * x[i] + 3 * a^5 * x[i]^2 - 8 * a^4 * x[i]^3 - 12 * a^3 * x[i]^4 + 3 * a * x[i]^6) * y[i] + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term2[i] + 3 * (a^8 - 4 * a^6 * x[i]^2 + 6 * a^4 * x[i]^4 - 4 * a^2 * x[i]^6 + x[i]^8) * term1[i]) / (π * a^10 * ν - π * a^10 + (π * a^2 * ν - π * a^2) * x[i]^8 + (π * a^2 * ν - π * a^2) * y[i]^8 - 4 * (π * a^4 * ν - π * a^4) * x[i]^6 + 4 * (π * a^4 * ν - π * a^4 + (π * a^2 * ν - π * a^2) * x[i]^2) * y[i]^6 + 6 * (π * a^6 * ν - π * a^6) * x[i]^4 + 2 * (3 * π * a^6 * ν - 3 * π * a^6 + 3 * (π * a^2 * ν - π * a^2) * x[i]^4 + 2 * (π * a^4 * ν - π * a^4) * x[i]^2) * y[i]^4 - 4 * (π * a^8 * ν - π * a^8) * x[i]^2 + 4 * (π * a^8 * ν - π * a^8 + (π * a^2 * ν - π * a^2) * x[i]^6 - (π * a^4 * ν - π * a^4) * x[i]^4 - (π * a^6 * ν - π * a^6) * x[i]^2) * y[i]^2)
    end
    return f
end

end
